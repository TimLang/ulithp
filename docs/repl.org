#+TITLE:     μLithp REPL
#+AUTHOR:    Fogus
#+EMAIL:     me@fogus.me
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:nil toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport

#+INCLUDE: header/header.org org

* Extending μLithp with a Read-Eval-Print-Loop (REPL)

My good friend [[http://www.eloquentruby.com][Russ Olsen]] took some time to play with μLithp and wrote a little REPL.  I extended it a bit to load a core library if it exists, as shown below:

** REPL

#+name: repl
#+begin_src ruby :tangle ../src/repl.rb :noweb yes 
require 'lithp'
require 'reader'

lisp = Lisp.new

if File.exist?("core.ulithp")
  source = File.open("core.ulithp", "r").read
  forms = Marshal.load(source)

  forms.each { |form| puts "#{form}" ; lisp.eval(form) }

  puts "Done loading core library containing #{forms.length} forms."
end

print "ulithp> "
while not $stdin.eof?
  line = readline
  s_expression = Reader.new(line).read
  p lisp.eval(s_expression)
  print "ulithp> "
end
#+end_src

** Usage

From your shell of choice, execute the following:

#+begin_src sh
> rvm use ruby-1.9.3
> ruby -I . repl.rb
#+end_src

This will put you in an interactive shell allowing a more traditional Lisp feel:

#+begin_src lisp
(car (quote (1 2 3)))
;;=> 1

(cdr (quote (1 2 3)))
;;=> [2, 3]

(label second (quote (lambda (x) (car (cdr x))))) 
(second (quote (1 2 3)))
;;=> 2
#+end_src

Fun!
